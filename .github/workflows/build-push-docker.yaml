name: Push helm when merged to master

on:
  push:
    branches:
      - main

permissions:
  contents: read  # This is required for actions/checkout

env:
  REPO_NAME: "pomodoro-go"
  DOCKERHUB_USERNAME: "eninkaduk"
  DEFAULT_GO_VERSION: "1.24.0"

jobs:
  test:
    name: Test 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.x' ]
    defaults:
      run:
        working-directory: app
    outputs:
      short_sha: ${{ steps.meta.outputs.short_sha }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
  
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: 👀 Debug run values
        id: meta
        run: |
          golang_version=$(go version | awk '{ sub(/^go/, "", $3); print $3 }')
          echo "golang_version=$golang_version" >> "$GITHUB_OUTPUT"
          short_sha=$(git rev-parse --short "$GITHUB_SHA")
          echo "short_sha=$short_sha" >> "$GITHUB_OUTPUT"
      
      - name: 🧪 Test
        run: go test -v .
      
  build_push:
    needs: 'test'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      
      - name: Set up the builders context
        run: docker context create builders

      # We need QEMU for arm-based images 🤙🏻
      - name: 🐣 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 👷🏾 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: builders
          platforms: linux/arm64, linux/amd64

      - name: 🔍 Inspect builder
        run: docker buildx inspect --bootstrap | grep Platform 
      
      - name: 🐋 Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: | 
            linux/amd64
            linux/arm64
          tags: |
            "${{ env.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:latest"
            "${{ env.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ needs.test.outputs.short_sha }}"

